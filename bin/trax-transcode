#!/usr/bin/env python

"""
  Import an Audio File (FLAC) into the metadata store.
"""

import os
import sys

import argparse
import progressbar

from trax.schema import Track
from trax.utils import log

import trax.format

def main():

  parser = argparse.ArgumentParser()
  parser.add_argument('--path', required=True, help='Path to your music library.')
  parser.add_argument('--progress', action='store_true', default=False, help='Use the progress bar.')
  parser.add_argument('--force', action='store_true', default=False, help='Force import of files.')

  parser.add_argument('--alac', action='store_true', default=False, help='Convert & tag ALAC.')
  parser.add_argument('--aac', action='store_true', default=False, help='Convert & tag AAC.')
  parser.add_argument('--mp3', action='store_true', default=False, help='Convert & tag MP3.')

  args = parser.parse_args()

  log.info("Processing files..")

  if args.progress:
    widgets  = [' ', progressbar.Percentage(), ' ', progressbar.Bar(marker='*',left='[',right=']'), ' ', progressbar.ETA(), ' ']
    progress = progressbar.ProgressBar(widgets=widgets, maxval=len(filelist))
    progress.start()
    i = 0

  errors = []

  for track in Track.query.filter(Track.filename.like(unicode(args.path + '%'))):

    if args.mp3:
      filename = track.filename.replace("/flac/", "/mp3/").replace(".flac", ".mp3")

      try:
        trax.format.mp3.MP3(track).write_metadata(filename)
      except Exception, e:
        errors.append((track.filename, e))

    if args.alac:
      filename = track.filename.replace("/flac/", "/alac/").replace(".flac", ".m4a")

      try:
        trax.format.mp4.MP4(track).write_metadata(filename)
      except Exception, e:
        errors.append((track.filename, e))

    if args.progress:
      progress.update(i)

  if args.progress:
    progress.finish()

  if len(errors) > 0:
    print "The following files had errors:"

    for error in errors:
      print error

if __name__ == "__main__":
  main()
